<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>do{coffee; code;} while(true)</title><link>https://rogena.me/</link><description>Recent content on do{coffee; code;} while(true)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Jason Rogena</copyright><lastBuildDate>Sat, 07 Nov 2020 12:00:00 +0000</lastBuildDate><atom:link href="https://rogena.me/index.xml" rel="self" type="application/rss+xml"/><item><title>An SRE's Guide to Distributed Consensus, Part 3</title><link>https://rogena.me/posts/2020-11-07-an-sres-guide-to-distributed-consensus-part-3/</link><pubDate>Sat, 07 Nov 2020 12:00:00 +0000</pubDate><guid>https://rogena.me/posts/2020-11-07-an-sres-guide-to-distributed-consensus-part-3/</guid><description>This is the second of three posts on distributed consensus in the DevOps world. These posts are based on a presentation I gave to the Nairobi GNU/Linux Users Group. A video of the presentation can be found here.
The first post in this series introduced distributed consensus and the second post introduced the Raft consensus algorithm. In this post, I&amp;rsquo;ll present common DevOps problem and show how we can use distributed consensus to deal with this problem at scale.</description></item><item><title>An SRE's Guide to Distributed Consensus, Part 2</title><link>https://rogena.me/posts/2020-11-07-an-sres-guide-to-distributed-consensus-part-2/</link><pubDate>Sat, 07 Nov 2020 11:00:00 +0000</pubDate><guid>https://rogena.me/posts/2020-11-07-an-sres-guide-to-distributed-consensus-part-2/</guid><description>This is the second of three posts on distributed consensus in the DevOps world. These posts are based on a presentation I gave to the Nairobi GNU/Linux Users Group. A video of the presentation can be found here.
The first post in this series introduced distributed consensus. I&amp;rsquo;ll introduce the Raft consensus algorithm in this post and try to explain how it handles distributed consensus.
The Raft algorithm is broken down into three parts.</description></item><item><title>An SRE's Guide to Distributed Consensus, Part 1</title><link>https://rogena.me/posts/2020-11-07-an-sres-guide-to-distributed-consensus-part-1/</link><pubDate>Sat, 07 Nov 2020 10:00:00 +0000</pubDate><guid>https://rogena.me/posts/2020-11-07-an-sres-guide-to-distributed-consensus-part-1/</guid><description>This is the first of three posts on distributed consensus in the DevOps world. These posts are based on a presentation I gave to the Nairobi GNU/Linux Users Group. A video of the presentation can be found here.
Consensus is when a group of individuals comes to an agreement, or a general agreement. A general agreement implies that not all individuals in the group need to agree with the decision.</description></item><item><title>SSH and Password Managers</title><link>https://rogena.me/posts/2020-01-24-using-password-manager-with-ssh/</link><pubDate>Fri, 24 Jan 2020 00:00:00 +0000</pubDate><guid>https://rogena.me/posts/2020-01-24-using-password-manager-with-ssh/</guid><description>The ssh program on Linux allows you to specify a program or script from where it should get a passphrase when it needs one. This allows you to, for instance, hookup it up to your password manager to feed it the passphrase. You can do this by specifying the path to the program to execute in the SSH_ASKPASS environment variable.
I use the pass password manager (which installs the pass command).</description></item><item><title>Signing Git Commits and Tags Using Your GPG Key</title><link>https://rogena.me/posts/2016-09-14-osx-signing-off-git-using-gpg/</link><pubDate>Wed, 14 Sep 2016 00:00:00 +0000</pubDate><guid>https://rogena.me/posts/2016-09-14-osx-signing-off-git-using-gpg/</guid><description>I have removed the section on configuring git to auto-sign tags, since the configuration doesn&amp;rsquo;t work. Thanks Hannes Van De Vreken for pointing that out!
Signing Git commits using GPG isn&amp;rsquo;t a requirement in most projects. It is however a nice to have feature, especially in cases where it is important for you to have your identity as the commiter verified. This prevents, for instance, an impersonator from going undetected when they submit a commit as you.</description></item><item><title>Heka, InfluxDB, and Grafana</title><link>https://rogena.me/posts/2016-01-02-heka-influxdb-and-grafana/</link><pubDate>Sat, 02 Jan 2016 00:00:00 +0000</pubDate><guid>https://rogena.me/posts/2016-01-02-heka-influxdb-and-grafana/</guid><description>I recently started working at a startup :). My first task there was to configure their new Linux server to host some live apps. I, professionally, haven&amp;rsquo;t done sysadmin work but since I&amp;rsquo;ve been configuring Linux VPSs to play with for some time now I figured it wouldn&amp;rsquo;t be that hard doing the initial setup. I did the usual; install and configure the necessary packages, firewall stuff, automated deployment of the apps, and of course, monitoring.</description></item><item><title>Matatus; Route Planning Using Neo4J</title><link>https://rogena.me/posts/2015-10-09-matatus-route-planning-using-neo4j/</link><pubDate>Fri, 09 Oct 2015 00:00:00 +0000</pubDate><guid>https://rogena.me/posts/2015-10-09-matatus-route-planning-using-neo4j/</guid><description>I have, for a year now, been trying to make an Opensource matatu transit application on Android for Nairobi. I must say, it has not been easy. I made some bad decisions. Some that have lead to me barking on the provabial wrong tree. I will, in this blog post, expound on one of the mistakes I made, my initial reasoning behind making this &amp;lsquo;silly&amp;rsquo; decision and why I was wrong.</description></item><item><title>Simple Localization on Android</title><link>https://rogena.me/posts/2014-10-13-simple-localization-on-android/</link><pubDate>Mon, 13 Oct 2014 00:00:00 +0000</pubDate><guid>https://rogena.me/posts/2014-10-13-simple-localization-on-android/</guid><description>Localizing apps to languages that are officially supported in Android is a bit straightforward. However, for unsupported languages, it might be a bit tricky especially if there are special characters involved.
I needed to translate my app to a bunch of local Kenyan languages. Adding support for these languages proved very easy (adding the translated strings to the strings.xml resource file). Mainly because all of these languages use the English alphabet.</description></item><item><title>Solr with MySQL</title><link>https://rogena.me/posts/2014-10-03-solr-with-mysql/</link><pubDate>Fri, 03 Oct 2014 00:00:00 +0000</pubDate><guid>https://rogena.me/posts/2014-10-03-solr-with-mysql/</guid><description>I work in a Research Institute. My job there involves making Software Systems that work with biological sample data. About six months ago, we started developing systems that involved doing high level searches on the biological sample data we have stored in numerous MySQL databases. These high level searches were being done directly on MySQL with the assistance of wildcards and a bit of cleaning. To be honest, the searches weren&amp;rsquo;t really working like we wanted them to.</description></item><item><title>Kannel and The Huawei E160</title><link>https://rogena.me/posts/2014-01-18-kannel-and-the-huawei-e160/</link><pubDate>Sat, 18 Jan 2014 00:00:00 +0000</pubDate><guid>https://rogena.me/posts/2014-01-18-kannel-and-the-huawei-e160/</guid><description>I love Kannel. Everybody who&amp;rsquo;s used It, loves It. And why wouldn&amp;rsquo;t you? It&amp;rsquo;s libre, it&amp;rsquo;s open and tt&amp;rsquo;s powerful. However, Kannel is hard to configure. Especially if Its your first time using It (let alone it being your first time using Linux). There are just too many variables you can tweak.
My Use Case As I had mentioned in another post, I used Kannel to send and receive SMSs from and Android App I&amp;rsquo;ve been building for farmers.</description></item><item><title>Sending App Data Over SMS on Android</title><link>https://rogena.me/posts/2013-12-22-sending-app-data-over-sms-on-android/</link><pubDate>Sun, 22 Dec 2013 00:00:00 +0000</pubDate><guid>https://rogena.me/posts/2013-12-22-sending-app-data-over-sms-on-android/</guid><description>For some time now I&amp;rsquo;ve been working on an Android app that is going to be used by small scale farmers in East Africa. We expect that most of the farmers will not have an internet connection. Hell, most of them won&amp;rsquo;t have android phones. But that&amp;rsquo;s a story for another day. So, for a proof of concept, the app I&amp;rsquo;m making should roll back to sending data using SMS when no HTTP connection is available.</description></item></channel></rss>