<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Distributed Consensus on do{coffee; code;} while(true)</title><link>https://jasonrogena.github.io/tags/distributed-consensus/</link><description>Recent content in Distributed Consensus on do{coffee; code;} while(true)</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Jason Rogena</copyright><lastBuildDate>Sat, 07 Nov 2020 12:00:00 +0000</lastBuildDate><atom:link href="https://jasonrogena.github.io/tags/distributed-consensus/index.xml" rel="self" type="application/rss+xml"/><item><title>An SRE's Guide to Distributed Consensus, Part 3</title><link>https://jasonrogena.github.io/posts/2020-11-07-an-sres-guide-to-distributed-consensus-part-3/</link><pubDate>Sat, 07 Nov 2020 12:00:00 +0000</pubDate><guid>https://jasonrogena.github.io/posts/2020-11-07-an-sres-guide-to-distributed-consensus-part-3/</guid><description>This is the second of three posts on distributed consensus in the DevOps world. These posts are based on a presentation I gave to the Nairobi GNU/Linux Users Group. A video of the presentation can be found here.
The first post in this series introduced distributed consensus and the second post introduced the Raft consensus algorithm. In this post, I&amp;rsquo;ll present common DevOps problem and show how we can use distributed consensus to deal with this problem at scale.</description></item><item><title>An SRE's Guide to Distributed Consensus, Part 2</title><link>https://jasonrogena.github.io/posts/2020-11-07-an-sres-guide-to-distributed-consensus-part-2/</link><pubDate>Sat, 07 Nov 2020 11:00:00 +0000</pubDate><guid>https://jasonrogena.github.io/posts/2020-11-07-an-sres-guide-to-distributed-consensus-part-2/</guid><description>This is the second of three posts on distributed consensus in the DevOps world. These posts are based on a presentation I gave to the Nairobi GNU/Linux Users Group. A video of the presentation can be found here.
The first post in this series introduced distributed consensus. I&amp;rsquo;ll introduce the Raft consensus algorithm in this post and try to explain how it handles distributed consensus.
The Raft algorithm is broken down into three parts.</description></item><item><title>An SRE's Guide to Distributed Consensus, Part 1</title><link>https://jasonrogena.github.io/posts/2020-11-07-an-sres-guide-to-distributed-consensus-part-1/</link><pubDate>Sat, 07 Nov 2020 10:00:00 +0000</pubDate><guid>https://jasonrogena.github.io/posts/2020-11-07-an-sres-guide-to-distributed-consensus-part-1/</guid><description>This is the first of three posts on distributed consensus in the DevOps world. These posts are based on a presentation I gave to the Nairobi GNU/Linux Users Group. A video of the presentation can be found here.
Consensus is when a group of individuals comes to an agreement, or a general agreement. A general agreement implies that not all individuals in the group need to agree with the decision.</description></item></channel></rss>